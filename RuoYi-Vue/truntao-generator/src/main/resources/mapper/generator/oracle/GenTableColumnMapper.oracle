<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.truntao.generator.mapper.GenTableColumnMapper">
    
    <resultMap type="com.truntao.generator.domain.po.GenTableColumn" id="GenTableColumnResult">
        <id     property="columnId"       column="column_id"      />
        <result property="tableId"        column="table_id"       />
        <result property="columnName"     column="column_name"    />
        <result property="columnComment"  column="column_comment" />
        <result property="columnType"     column="column_type"    />
        <result property="javaType"       column="java_type"      />
        <result property="javaField"      column="java_field"     />
        <result property="pk"           column="is_pk"          />
        <result property="increment"    column="is_increment"   />
        <result property="required"     column="is_required"    />
        <result property="insert"       column="is_insert"      />
        <result property="edit"         column="is_edit"        />
        <result property="list"         column="is_list"        />
        <result property="query"        column="is_query"       />
        <result property="queryType"      column="query_type"     />
        <result property="htmlType"       column="html_type"      />
        <result property="dictType"       column="dict_type"      />
        <result property="sort"           column="sort"           />
        <result property="createBy"       column="create_by"      />
        <result property="createTime"     column="create_time"    />
        <result property="updateBy"       column="update_by"      />
        <result property="updateTime"     column="update_time"    />
    </resultMap>
	
	<sql id="selectGenTableColumnVo">
        select column_id, table_id, column_name, column_comment, column_type, java_type, java_field, is_pk, is_increment, is_required, is_insert, is_edit, is_list, is_query, query_type, html_type, dict_type, sort, create_by, create_time, update_by, update_time from gen_table_column
    </sql>
	
    <select id="selectGenTableColumnListByTableId" parameterType="Long" resultMap="GenTableColumnResult">
        <include refid="selectGenTableColumnVo"/>
        where table_id = #{tableId}
        order by sort
    </select>
    
    <select id="selectDbTableColumnsByName" parameterType="String" resultMap="GenTableColumnResult">
		 select lower(temp.column_name) as column_name,
                (case when (temp.nullable = 'N'  and  temp.constraint_type != 'P') then '1' else null end) as is_required,
                (case when temp.constraint_type = 'P' then '1' else '0' end) as is_pk,
                temp.column_id as sort,
                temp.comments as column_comment,
                (case when temp.constraint_type = 'P' then '1' else '0' end) as is_increment,
                (case when temp.data_scale>0  then lower(temp.data_type)||'('||temp.data_precision||','||temp.data_scale||')' else lower(temp.data_type) end) as column_type
           from (
                  select col.column_id, col.column_name,col.nullable, col.data_type,col.data_precision,col.data_scale, colc.comments, uc.constraint_type
                       , row_number() over (partition by col.column_name order by uc.constraint_type desc) as row_flg
                  from user_tab_columns col
                  left join user_col_comments colc on colc.table_name = col.table_name and colc.column_name = col.column_name
                  left join user_cons_columns ucc on ucc.table_name = col.table_name and ucc.column_name = col.column_name
                  left join user_constraints uc on uc.constraint_name = ucc.constraint_name
                 where col.table_name = upper(#{tableName})
                  ) temp
           WHERE temp.row_flg = 1
          ORDER BY temp.column_id
	</select>
    
    <delete id="deleteGenTableColumnByIds" parameterType="Long">
        delete from gen_table_column where table_id in 
        <foreach collection="array" item="tableId" open="(" separator="," close=")">
            #{tableId}
        </foreach>
    </delete>
    
    <delete id="deleteGenTableColumns">
        delete from gen_table_column where column_id in 
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.columnId}
        </foreach>
    </delete>

</mapper>