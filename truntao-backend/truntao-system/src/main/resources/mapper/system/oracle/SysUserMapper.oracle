<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.truntao.system.mapper.SysUserMapper">

    <resultMap type="com.truntao.common.core.domain.dto.SysUserDTO" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="phoneNumber"  column="phone_number"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
		<result property="pwdUpdateDate" column="pwd_update_date" />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <association property="dept"    javaType="com.truntao.common.core.domain.dto.SysDeptDTO" resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"           resultMap="RoleResult" />
    </resultMap>
	
    <resultMap id="deptResult" type="com.truntao.common.core.domain.dto.SysDeptDTO">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>
	
    <resultMap id="RoleResult" type="com.truntao.common.core.domain.dto.SysRoleDTO">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>

	<sql id="selectUserVo">
        select u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phone_number, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by,u.pwd_update_date, u.create_time, u.remark,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>
    
    <select id="selectUserList" parameterType="com.truntao.common.core.domain.entity.SysUser" resultMap="SysUserResult">
		select u.user_id, u.dept_id, u.nick_name, u.user_name, u.email, u.avatar, u.phone_number, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_name, d.leader from sys_user u
		left join sys_dept d on u.dept_id = d.dept_id
		where u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat(concat('%', #{userName}), '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phoneNumber != null and phoneNumber != ''">
			AND u.phone_number like concat(concat('%', #{phoneNumber}), '%')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET(#{deptId}, ancestors) <![CDATA[ <> ]]> 0 ))
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectAllocatedList" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phone_number, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="sysUser.userName != null and sysUser.userName != ''">
			AND u.user_name like concat(concat('%', #{sysUser.userName}), '%')
		</if>
		<if test="sysUser.phoneNumber != null and sysUser.phoneNumber != ''">
			AND u.phone_number like concat(concat('%', #{sysUser.phoneNumber}), '%')
		</if>
		<!-- 数据范围过滤 -->
		${sysUser.params.dataScope}
	</select>
	
	<select id="selectUnallocatedList" parameterType="com.truntao.common.core.domain.entity.SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phone_number, u.status, u.create_time
	    from sys_user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="user.userName != null and user.userName != ''">
			AND u.user_name like concat(concat('%', #{user.userName}), '%')
		</if>
		<if test="user.phoneNumber != null and user.phoneNumber != ''">
			AND u.phone_number like concat(concat('%', #{user.phoneNumber}), '%')
		</if>
		<!-- 数据范围过滤 -->
		${user.params.dataScope}
	</select>
	
	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>
	
	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>
	
	<select id="checkUserNameUnique" parameterType="String" resultType="com.truntao.common.core.domain.entity.SysUser">
		select user_id, user_name from sys_user where user_name = #{userName} and del_flag = '0' and rownum <![CDATA[ <= ]]> 1
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultType="com.truntao.common.core.domain.entity.SysUser">
		select user_id, phonenumber from sys_user where phone_number = #{phonenumber} and del_flag = '0' and rownum <![CDATA[ <= ]]> 1
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultType="com.truntao.common.core.domain.entity.SysUser">
		select user_id, email from sys_user where email = #{email} and del_flag = '0' and rownum <![CDATA[ <= ]]> 1
	</select>
	
	<update id="updateUserStatus" parameterType="com.truntao.common.core.domain.entity.SysUser">
        update sys_user set status = #{status}, update_time = SYSDATE where user_id = #{userId}
	</update>
	
	<update id="updateUserAvatar" parameterType="com.truntao.common.core.domain.entity.SysUser">
        update sys_user set avatar = #{avatar}, update_time = SYSDATE where user_id = #{userId}
	</update>
	
	<update id="resetUserPwd" parameterType="com.truntao.common.core.domain.entity.SysUser">
        update sys_user set pwd_update_date = SYSDATE, password = #{password}, update_time = SYSDATE where user_id = #{userId}
	</update>
	
	<delete id="deleteUserById" parameterType="Long">
 		update sys_user set del_flag = '1' where user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '1' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>
	
</mapper> 